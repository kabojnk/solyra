version: '3.8'

services:
  webapp:
    image: node:20-alpine
    working_dir: /app
    command: sh -c "npm install && npm run dev"
    env_file:
      - .env
      - ./app/.env
    environment:
      - NODE_ENV=development
    expose:
      - "${WEBAPP_PORT:-5173}:5173"
    depends_on:
      - api
    networks:
      - frontend

  api:
    build:
      context: ./server
      dockerfile: Dockerfile
    env_file:
      - ./server/.env
    ports:
      - "${API_PORT:-8080}:8080"
    depends_on:
      - postgres
      - redis
    networks:
      - backend
      - frontend
    restart: unless-stopped

  postgres:
    image: postgres:14-alpine
    env_file:
      - ./server/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - backend
    restart: unless-stopped

  redis:
    image: redis:alpine
    env_file:
      - ./server/.env
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  letsencrypt:

networks:
  frontend:
  backend:
