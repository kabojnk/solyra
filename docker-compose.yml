version: '3.8'

services:
  webapp:
    build:
      target: production
      context: ./app
      dockerfile: Dockerfile
    env_file:
      - .env
      - ./app/.env
    environment:
      - NODE_ENV=production
    depends_on:
      - api
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`yourdomain.com`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=letsencrypt"
      - "traefik.http.services.frontend.loadbalancer.server.port=${WEBAPP_PORT:-5173}"

  api:
    build:
      context: ./server
      dockerfile: Dockerfile
    env_file:
      - ./server/.env
    depends_on:
      - postgres
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.${API_DOMAIN:-api.localhost}`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"
      - "traefik.http.services.api.loadbalancer.server.port=8080"
    restart: unless-stopped

  postgres:
    image: postgres:14-alpine
    env_file:
      - ./server/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    restart: unless-stopped

  redis:
    image: redis:alpine
    env_file:
      - ./server/.env
    volumes:
      - redis_data:/data    
    restart: unless-stopped

  traefik:
    image: traefik:v2.10
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    env_file:
      - .env
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/acme.json:/letsencrypt/acme.json
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  letsencrypt:
