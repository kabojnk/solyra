version: '3.8'

services:
  webapp:
    image: node:20-alpine
    working_dir: /app
    command: sh -c "npm install && npm run dev"
    env_file:
      - .env
      - ./app/.env
    environment:
      - NODE_ENV=development
      - VITE_API_URL=https://api.${DOMAIN:-localhost}
    expose:
      - "5173"
    networks:
      - frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.webapp.rule=Host(`${DOMAIN:-localhost}`)"
      - "traefik.http.services.webapp.loadbalancer.server.port=5173"

  api:
    build:
      context: ./server
      dockerfile: Dockerfile
    env_file:
      - .env
      - ./server/.env
    expose:
      - "8081"
    depends_on:
      - postgres
      - redis
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${POSTGRES_USER:-postgres}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - DB_NAME=${POSTGRES_DB:-postgres}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - WEATHER_API_KEY=${WEATHER_API_KEY}
    networks:
      - backend
      - frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.${DOMAIN:-localhost}`)"
      - "traefik.http.services.api.loadbalancer.server.port=8081"
    restart: unless-stopped

  postgres:
    image: postgres:14-alpine
    env_file:
      - .env
      - ./server/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
    networks:
      - backend
    restart: unless-stopped

  redis:
    image: redis:alpine
    env_file:
      - .env
      - ./server/.env
    volumes:
      - redis_data:/data
    networks:
      - backend
    restart: unless-stopped

  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
    env_file:
      - .env
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - letsencrypt:/letsencrypt
    networks:
      - frontend
    deploy:
      replicas: ${TRAEFIK_REPLICAS:-1}
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  letsencrypt:

networks:
  frontend:
  backend:
